# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: mathfever-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  stage: beta
  region: ap-southeast-2
  runtime: go1.x

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  categories:
    handler: bin/categories/categories
    memorySize: 128
    events:
      - http:
          path: categories
          method: get
          cors: true
  # networking category
  binaryToDecimal:
    handler: bin/calculation/networking/binaryToDecimal
    memorySize: 128
    events:
      - http:
          path: calculation/binary-to-decimal
          method: post
          cors: true
  binaryToHexadecimal:
    handler: bin/calculation/networking/binaryToHexadecimal
    memorySize: 128
    events:
      - http:
          path: calculation/binary-to-hexadecimal
          method: post
          cors: true
  decimalToBinary:
    handler: bin/calculation/networking/decimalToBinary
    memorySize: 128
    events:
      - http:
          path: calculation/decimal-to-binary
          method: post
          cors: true
  decimalToHexadecimal:
    handler: bin/calculation/networking/decimalToHexadecimal
    memorySize: 128
    events:
      - http:
          path: calculation/decimal-to-hexadecimal
          method: post
          cors: true
  hexadecimalToBinary:
    handler: bin/calculation/networking/hexadecimalToBinary
    memorySize: 128
    events:
      - http:
          path: calculation/hexadecimal-to-binary
          method: post
          cors: true
  hexadecimalToDecimal:
    handler: bin/calculation/networking/hexadecimalToDecimal
    memorySize: 128
    events:
      - http:
          path: calculation/is-prime
          method: post
          cors: true
  # prime and numbers category
  isPrime:
    handler: bin/calculation/numbers/isPrime
    memorySize: 128
    events:
      - http:
          path: calculation/is-prime
          method: post
          cors: true
  highestCommonFactor:
    handler: bin/calculation/numbers/highestCommonFactor
    memorySize: 128
    events:
      - http:
          path: calculation/highest-common-factor
          method: post
          cors: true
  lowestCommonMultiple:
    handler: bin/calculation/numbers/lowestCommonMultiple
    memorySize: 128
    events:
      - http:
          path: calculation/lowest-common-multiple
          method: post
          cors: true
  # percentages category
  changeByPercentage:
    handler: bin/calculation/percentages/changeByPercentage
    memorySize: 128
    events:
      - http:
          path: calculation/change-number-by-percentage
          method: post
          cors: true
  numberFromPercentage:
    handler: bin/calculation/percentages/numberFromPercentage
    memorySize: 128
    events:
      - http:
          path: calculation/get-number-from-a-percentage
          method: post
          cors: true
  percentageChange:
    handler: bin/calculation/percentages/percentageChange
    memorySize: 128
    events:
      - http:
          path: calculation/find-percentage-difference-of-two-numbers
          method: post
          cors: true
  percentageFromNumber:
    handler: bin/calculation/percentages/percentageFromNumber
    memorySize: 128
    events:
      - http:
          path: calculation/find-percentages-of-a-number
          method: post
          cors: true
  # tsa category
  tsaPythagoreanTheorem:
    handler: bin/calculation/tsa/tsaPythagoreanTheorem
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-pythagorean-theorem
          method: post
          cors: true
  tsaCone:
    handler: bin/calculation/tsa/tsaCone
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-cone
          method: post
          cors: true
  tsaCube:
    handler: bin/calculation/tsa/tsaCube
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-cube
          method: post
          cors: true
  tsaCylinder:
    handler: bin/calculation/tsa/tsaCylinder
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-cylinder
          method: post
          cors: true
  tsaRectangularPrism:
    handler: bin/calculation/tsa/tsaRectangularPrism
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-rectangularPrism
          method: post
          cors: true
  tsaSphere:
    handler: bin/calculation/tsa/tsaSphere
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-sphere
          method: post
          cors: true
  tsaSquareBaseTriangle:
    handler: bin/calculation/tsa/tsaSquareBaseTriangle
    memorySize: 128
    events:
      - http:
          path: calculation/tsa-square-base-triangle
          method: post
          cors: true
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
# events:
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
